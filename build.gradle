buildscript {
  repositories {
    google()
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
}

plugins {
  id 'java'
  id 'checkstyle'
  id 'org.jenkins-ci.jpi' version '0.47.0'
  id 'net.saliman.cobertura' version '4.0.0'
  id 'com.github.kt3k.coveralls' version '2.12.2'
}

group = 'org.jenkins-ci.plugins'
archivesBaseName = 'phabricator-plugin'
version = '2.1.5'
description = 'Integrate Jenkins with Phabricator Differentials and Uberalls'

sourceCompatibility = 1.11
targetCompatibility = 1.11

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
}

jenkinsPlugin {
  jenkinsVersion = '2.387.1'
  displayName = 'Phabricator Differential Plugin'
  url = 'https://wiki.jenkins-ci.org/display/JENKINS/Phabricator+Differential+Plugin'
  gitHubUrl = 'https://github.com/uber/phabricator-jenkins-plugin'
  shortName = 'phabricator-plugin'
  maskClasses = 'org.apache.http.'

  developers {
    developer {
      id 'ai'
      name 'Aiden Scandella'
      email 'sc@ndella.com'
    }
  }

  licenses {
    license {
      name 'MIT License'
      url 'http://opensource.org/licenses/MIT'
    }
  }
}

dependencies {
  implementation 'org.apache.httpcomponents:httpclient:4.5.14'
  implementation 'org.jacoco:org.jacoco.report:0.8.8'
  implementation 'org.jenkins-ci.plugins:credentials:1224.vc23ca_a_9a_2cb_0'
  implementation 'org.jenkins-ci.plugins:junit:1189.v1b_e593637fa_e'
  implementation 'org.jenkins-ci.plugins:cobertura:1.17'
  implementation 'org.jenkins-ci.plugins:jacoco:3.3.2'

  jenkinsPlugins 'io.jenkins.plugins:checks-api:1.8.1@jar'
  jenkinsPlugins 'io.jenkins.plugins:plugin-util-api:3.1.0@jar'
  jenkinsPlugins 'org.jenkins-ci.plugins:credentials:1224.vc23ca_a_9a_2cb_0@jar'
  jenkinsPlugins 'org.jenkins-ci.plugins:display-url-api:2.3.7@jar'

  optionalJenkinsPlugins 'org.jenkins-ci.plugins:junit:1189.v1b_e593637fa_e@jar'
  optionalJenkinsPlugins 'org.jenkins-ci.plugins:cobertura:1.17@jar'
  optionalJenkinsPlugins 'org.jenkins-ci.plugins:jacoco:3.3.2@jar'

  testImplementation 'junit:junit:4.13.2'
  testImplementation 'org.apache.httpcomponents:httpclient:4.5.14:tests'
  testImplementation 'net.sf.trove4j:trove4j:3.0.3'
  testImplementation('org.mockito:mockito-core:1.10.19') {
    exclude module: 'hamcrest-core'
  }
  testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
  testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
  testImplementation 'org.powermock:powermock-classloading-xstream:2.0.9'
  testImplementation 'org.jenkins-ci.plugins:jacoco:3.3.2'

  jenkinsTest 'org.jenkins-ci.main:jenkins-war:2.387.1@war'
  jenkinsTest 'org.jenkins-ci.plugins:matrix-project:785.v06b_7f47b_c631@jar'
  jenkinsTest 'org.jenkins-ci.main:jenkins-test-harness:1949.vb_b_37feefe78c@jar'
}

configurations.configureEach {
  if (it.name.toLowerCase().contains("test")) {
    resolutionStrategy {
      force 'org.apache.httpcomponents:httpclient:4.5.14:tests'
      force 'xml-apis:xml-apis:2.0.2'
    }
  }
}

cobertura.coverageFormats = ['html', 'xml']
